% This file was generated by create_alfile_gait2d_osim on 28-Nov-2024
% Autolev source code for the gait2d_osim multibody model

AUTOZ ON
PAUSE 0
UnitSystem  kg,meter,sec
Newtonian ground

MotionVariables' q{9}''
VARIABLES G{6}
CONSTANTS par__bodyweight
%------------------------------------------------------
BODY pelvis
MASS pelvis = par__pelvis_M
INERTIA  pelvis, 0, 0, par__pelvis_Izz
POINT pelvisJoint
P_groundO_pelvisJoint> = Vector(ground, q2, q3, 0)
V_pelvisJoint_ground> = DT(P_groundO_pelvisJoint>, ground)
SIMPROT(ground, pelvis, 3, q1)
W_pelvis_ground> = W_ground_ground> + Ground3> * q1'
CONSTANTS par__pelvis_CMx, par__pelvis_CMy
P_pelvisJoint_pelvisO> = Vector(pelvis, par__pelvis_CMx, par__pelvis_CMy, 0)
V2PTS(ground, pelvis, pelvisJoint, pelvisO)
fk = [dot(P_groundO_pelvisJoint>, ground1>);dot(P_groundO_pelvisJoint>, ground2>);ground_pelvis[1,1];ground_pelvis[1,2];ground_pelvis[2,1];ground_pelvis[2,2]]

constants par__Rhip_x, par__Rhip_y
%------------------------------------------------------
BODY Rfemur
MASS Rfemur = par__Rfemur_M
INERTIA  Rfemur, 0, 0, par__Rfemur_Izz
POINT RfemurJoint
P_pelvisJoint_RfemurJoint> = Vector(pelvis, par__Rhip_x, par__Rhip_y, 0)
V2PTS(ground, pelvis, pelvisJoint, RfemurJoint)
SIMPROT(pelvis, Rfemur, 3, q4)
W_Rfemur_ground> = W_pelvis_ground> + Ground3> * q4'
CONSTANTS par__Rfemur_CMx, par__Rfemur_CMy
P_RfemurJoint_RfemurO> = Vector(Rfemur, par__Rfemur_CMx, par__Rfemur_CMy, 0)
V2PTS(ground, Rfemur, RfemurJoint, RfemurO)
fk := [fk;dot(P_groundO_RfemurJoint>, ground1>);dot(P_groundO_RfemurJoint>, ground2>);ground_Rfemur[1,1];ground_Rfemur[1,2];ground_Rfemur[2,1];ground_Rfemur[2,2]]

constants par__Rknee_x{5}, par__Rknee_y{5}
%------------------------------------------------------
BODY Rtibia
MASS Rtibia = par__Rtibia_M
INERTIA  Rtibia, 0, 0, par__Rtibia_Izz
POINT RtibiaJoint
P_RfemurJoint_RtibiaJoint> = Vector(Rfemur, par__Rknee_x1 * q5^4+ par__Rknee_x2 * q5^3+ par__Rknee_x3 * q5^2+ par__Rknee_x4 * q5+ par__Rknee_x5, par__Rknee_y1 * q5^4+ par__Rknee_y2 * q5^3+ par__Rknee_y3 * q5^2+ par__Rknee_y4 * q5+ par__Rknee_y5, 0)
V2PTS(ground, Rfemur, RfemurJoint, RtibiaJoint)
SIMPROT(Rfemur, Rtibia, 3, q5)
W_Rtibia_ground> = W_Rfemur_ground> + Ground3> * q5'
CONSTANTS par__Rtibia_CMx, par__Rtibia_CMy
P_RtibiaJoint_RtibiaO> = Vector(Rtibia, par__Rtibia_CMx, par__Rtibia_CMy, 0)
V2PTS(ground, Rtibia, RtibiaJoint, RtibiaO)
fk := [fk;dot(P_groundO_RtibiaJoint>, ground1>);dot(P_groundO_RtibiaJoint>, ground2>);ground_Rtibia[1,1];ground_Rtibia[1,2];ground_Rtibia[2,1];ground_Rtibia[2,2]]

CONSTANT par__Rankle_y
%------------------------------------------------------
BODY Rfoot
MASS Rfoot = par__Rfoot_M
INERTIA  Rfoot, 0, 0, par__Rfoot_Izz
POINT RfootJoint
P_RtibiaJoint_RfootJoint> = Vector(Rtibia, 0, par__Rankle_y, 0)
V2PTS(ground, Rtibia, RtibiaJoint, RfootJoint)
SIMPROT(Rtibia, Rfoot, 3, q6)
W_Rfoot_ground> = W_Rtibia_ground> + Ground3> * q6'
CONSTANTS par__Rfoot_CMx, par__Rfoot_CMy
P_RfootJoint_RfootO> = Vector(Rfoot, par__Rfoot_CMx, par__Rfoot_CMy, 0)
V2PTS(ground, Rfoot, RfootJoint, RfootO)
fk := [fk;dot(P_groundO_RfootJoint>, ground1>);dot(P_groundO_RfootJoint>, ground2>);ground_Rfoot[1,1];ground_Rfoot[1,2];ground_Rfoot[2,1];ground_Rfoot[2,2]]

constants par__Lhip_x, par__Lhip_y
%------------------------------------------------------
BODY Lfemur
MASS Lfemur = par__Lfemur_M
INERTIA  Lfemur, 0, 0, par__Lfemur_Izz
POINT LfemurJoint
P_pelvisJoint_LfemurJoint> = Vector(pelvis, par__Lhip_x, par__Lhip_y, 0)
V2PTS(ground, pelvis, pelvisJoint, LfemurJoint)
SIMPROT(pelvis, Lfemur, 3, q7)
W_Lfemur_ground> = W_pelvis_ground> + Ground3> * q7'
CONSTANTS par__Lfemur_CMx, par__Lfemur_CMy
P_LfemurJoint_LfemurO> = Vector(Lfemur, par__Lfemur_CMx, par__Lfemur_CMy, 0)
V2PTS(ground, Lfemur, LfemurJoint, LfemurO)
fk := [fk;dot(P_groundO_LfemurJoint>, ground1>);dot(P_groundO_LfemurJoint>, ground2>);ground_Lfemur[1,1];ground_Lfemur[1,2];ground_Lfemur[2,1];ground_Lfemur[2,2]]

constants par__Lknee_x{5}, par__Lknee_y{5}
%------------------------------------------------------
BODY Ltibia
MASS Ltibia = par__Ltibia_M
INERTIA  Ltibia, 0, 0, par__Ltibia_Izz
POINT LtibiaJoint
P_LfemurJoint_LtibiaJoint> = Vector(Lfemur, par__Lknee_x1 * q8^4+ par__Lknee_x2 * q8^3+ par__Lknee_x3 * q8^2+ par__Lknee_x4 * q8+ par__Lknee_x5, par__Lknee_y1 * q8^4+ par__Lknee_y2 * q8^3+ par__Lknee_y3 * q8^2+ par__Lknee_y4 * q8+ par__Lknee_y5, 0)
V2PTS(ground, Lfemur, LfemurJoint, LtibiaJoint)
SIMPROT(Lfemur, Ltibia, 3, q8)
W_Ltibia_ground> = W_Lfemur_ground> + Ground3> * q8'
CONSTANTS par__Ltibia_CMx, par__Ltibia_CMy
P_LtibiaJoint_LtibiaO> = Vector(Ltibia, par__Ltibia_CMx, par__Ltibia_CMy, 0)
V2PTS(ground, Ltibia, LtibiaJoint, LtibiaO)
fk := [fk;dot(P_groundO_LtibiaJoint>, ground1>);dot(P_groundO_LtibiaJoint>, ground2>);ground_Ltibia[1,1];ground_Ltibia[1,2];ground_Ltibia[2,1];ground_Ltibia[2,2]]

CONSTANT par__Lankle_y
%------------------------------------------------------
BODY Lfoot
MASS Lfoot = par__Lfoot_M
INERTIA  Lfoot, 0, 0, par__Lfoot_Izz
POINT LfootJoint
P_LtibiaJoint_LfootJoint> = Vector(Ltibia, 0, par__Lankle_y, 0)
V2PTS(ground, Ltibia, LtibiaJoint, LfootJoint)
SIMPROT(Ltibia, Lfoot, 3, q9)
W_Lfoot_ground> = W_Ltibia_ground> + Ground3> * q9'
CONSTANTS par__Lfoot_CMx, par__Lfoot_CMy
P_LfootJoint_LfootO> = Vector(Lfoot, par__Lfoot_CMx, par__Lfoot_CMy, 0)
V2PTS(ground, Lfoot, LfootJoint, LfootO)
fk := [fk;dot(P_groundO_LfootJoint>, ground1>);dot(P_groundO_LfootJoint>, ground2>);ground_Lfoot[1,1];ground_Lfoot[1,2];ground_Lfoot[2,1];ground_Lfoot[2,2]]

CONSTANTS par__back_x, par__back_y
%------------------------------------------------------
BODY torso
MASS torso = par__torso_M
INERTIA  torso, 0, 0, par__torso_Izz
POINT torsoJoint
P_pelvisJoint_torsoJoint> = Vector(pelvis, par__back_x, par__back_y, 0)
V2PTS(ground, pelvis, pelvisJoint, torsoJoint)
DIRCOS(pelvis, torso, BODY123, 0, 0, 0)
ANGVEL(pelvis, torso, BODY123, 0, 0, 0)
CONSTANTS par__torso_CMx, par__torso_CMy
P_torsoJoint_torsoO> = Vector(torso, par__torso_CMx, par__torso_CMy, 0)
V2PTS(ground, torso, torsoJoint, torsoO)
fk := [fk;dot(P_groundO_torsoJoint>, ground1>);dot(P_groundO_torsoJoint>, ground2>);ground_torso[1,1];ground_torso[1,2];ground_torso[2,1];ground_torso[2,2]]

q = [q1, q2, q3, q4, q5, q6, q7, q8, q9]
qd = [q1', q2', q3', q4', q5', q6', q7', q8', q9']
qdd = [q1'', q2'', q3'', q4'', q5'', q6'', q7'', q8'', q9'']
dfk_dq    = ZEE(D(fk,q))
fkdot     = ZEE(DT(fk))
dfkdot_dq = ZEE(D(fkdot,q))
Encode fk, dfk_dq, fkdot, dfkdot_dq
Code Algebraic() gait2d_osim/gait2d_osim_FK_raw.c
